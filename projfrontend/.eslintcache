[{"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/index.js":"1","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/Routes.js":"2","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Cart.js":"3","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Home.js":"4","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/Signup.js":"5","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/Signin.js":"6","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/UserDashBoard.js":"7","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/AdminDashBoard.js":"8","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/NotFound404Page.js":"9","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageCategories.js":"10","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/AddCategory.js":"11","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/AddProduct.js":"12","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageProducts.js":"13","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateCategory.js":"14","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageOrders.js":"15","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateProduct.js":"16","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateOrder.js":"17","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/PrivateRoutes.js":"18","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/AdminRoutes.js":"19","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Base.js":"20","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Card.js":"21","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/backend.js":"22","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/StripeCheckout.js":"23","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Carousel.js":"24","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/index.js":"25","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/cartHelper.js":"26","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/coreapicalls.js":"27","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/helper/userapicalls.js":"28","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/helper/adminapicall.js":"29","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/orderHelper.js":"30","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/NavMenu.js":"31","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/ImageHelper.js":"32"},{"size":156,"mtime":1672902095465,"results":"33","hashOfConfig":"34"},{"size":2333,"mtime":1672902095465,"results":"35","hashOfConfig":"34"},{"size":2463,"mtime":1672902095465,"results":"36","hashOfConfig":"34"},{"size":2796,"mtime":1672902095465,"results":"37","hashOfConfig":"34"},{"size":4632,"mtime":1672902095465,"results":"38","hashOfConfig":"34"},{"size":3946,"mtime":1672902095465,"results":"39","hashOfConfig":"34"},{"size":7631,"mtime":1672902095465,"results":"40","hashOfConfig":"34"},{"size":2986,"mtime":1672902095465,"results":"41","hashOfConfig":"34"},{"size":509,"mtime":1672902095465,"results":"42","hashOfConfig":"34"},{"size":2724,"mtime":1672902095465,"results":"43","hashOfConfig":"34"},{"size":2710,"mtime":1672902095465,"results":"44","hashOfConfig":"34"},{"size":4673,"mtime":1672902095465,"results":"45","hashOfConfig":"34"},{"size":2815,"mtime":1672902095465,"results":"46","hashOfConfig":"34"},{"size":2993,"mtime":1672902095465,"results":"47","hashOfConfig":"34"},{"size":4913,"mtime":1672902095465,"results":"48","hashOfConfig":"34"},{"size":5470,"mtime":1672902095465,"results":"49","hashOfConfig":"34"},{"size":3441,"mtime":1672902095465,"results":"50","hashOfConfig":"34"},{"size":536,"mtime":1672902095465,"results":"51","hashOfConfig":"34"},{"size":568,"mtime":1672902095465,"results":"52","hashOfConfig":"34"},{"size":459,"mtime":1672902095465,"results":"53","hashOfConfig":"34"},{"size":4535,"mtime":1672902095465,"results":"54","hashOfConfig":"34"},{"size":64,"mtime":1672902095465,"results":"55","hashOfConfig":"34"},{"size":4891,"mtime":1672902095465,"results":"56","hashOfConfig":"34"},{"size":1345,"mtime":1672902095465,"results":"57","hashOfConfig":"34"},{"size":1800,"mtime":1672902095465,"results":"58","hashOfConfig":"34"},{"size":3594,"mtime":1672902095465,"results":"59","hashOfConfig":"34"},{"size":227,"mtime":1672902095465,"results":"60","hashOfConfig":"34"},{"size":406,"mtime":1672902095465,"results":"61","hashOfConfig":"34"},{"size":5067,"mtime":1672902095465,"results":"62","hashOfConfig":"34"},{"size":457,"mtime":1672902095465,"results":"63","hashOfConfig":"34"},{"size":3559,"mtime":1672902095465,"results":"64","hashOfConfig":"34"},{"size":713,"mtime":1672902095465,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"4i5rmq",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/index.js",[],["149","150"],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/Routes.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Cart.js",["151","152","153"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart, cartEmpty, countcartprod } from \"./helper/cartHelper\";\nimport StripeCheckout from \"./StripeCheckout\";\nimport \"./cart.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [reload, setReload] = useState(false);\n  const [cartProducts, setCartProducts] = useState([]);\n  \n\n  useEffect(() => {\n    setProducts(loadCart());\n    setCartProducts(loadCart());\n  }, [reload]);\n\n  const emptyCartMessage = () => {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <h1 style={{ color: \"chartreuse\", width: \"100%\" }}>\n          Nothing in your Cart :({\" \"}\n        </h1>\n        <Link to=\"/\">\n          <button className=\"btn btn-info text-white\">Shop Now</button>\n        </Link>\n      </div>\n    );\n  };\n\n  const loadAllProducts = () => {\n    return (\n      <div>\n        <h2 className=\"text-white\">Your Cart Items</h2>\n\n        {products.map((product, index) => (\n          <Card\n            key={index}\n            product={product}\n            removeFromCart={true}\n            addtoCart={false}\n            setReload={setReload}\n            reload={reload}\n          />\n        ))}\n      </div>\n    );\n  };\n  const loadCheckout = () => {\n    return (\n      <div>\n        <h2>Payment Option</h2>\n      </div>\n    );\n  };\n\n  return (\n    <Base\n      cartProdCount={products.length}\n      className=\"mt-5\"\n      title=\"Cart Page\"\n      description=\"Ready to checkout\"\n      totalProdCount={products.length}\n    >\n      {products.length > 0 && (\n        <button\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n          onClick={() => {\n            cartEmpty(() => {\n              console.log(\"\");\n            });\n            setReload(!reload);\n          }}\n        >\n          Remove All\n        </button>\n      )}\n      <div id=\"cart-container\">\n        {products.length > 0 && (\n          <div\n            className=\"\"\n            id=\"stripecheckout\"\n            style={{ alignItems: \"center\" }}\n          >\n            <StripeCheckout\n              products={products}\n              setReload={setReload}\n            />\n          </div>\n        )}\n        <div className=\"\" id=\"cartProd\">\n          {products.length > 0 ? loadAllProducts() : emptyCartMessage()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Home.js",["154","155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"./helper/coreapicalls\";\nimport ShowCarousel from \"./Carousel\";\nimport { loadCart, setCart } from \"./helper/cartHelper\";\nimport \"./home.css\";\n\nconst Home = () => {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [cartProducts, setCartProducts] = useState([]);\n  const [reloadCartItems, setReloadCartItems] = useState(false);\n  const displayProdPerPage = 6;\n  const totalVisistedProd = pageNumber * displayProdPerPage;\n\n  const totalPages = Math.ceil(products.length / displayProdPerPage);\n\n  const loadAllProduct = () => {\n    getProducts().then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCart();\n    loadAllProduct();\n    setCartProducts(loadCart());\n  }, [reloadCartItems]);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  const displayProd = () =>\n    products\n      .filter((val) => {\n        if (searchInput == \"\") {\n          return val;\n        } else if (val.name.toLowerCase().includes(searchInput.toLowerCase())) {\n          return val;\n        }\n      })\n      .slice(totalVisistedProd, totalVisistedProd + displayProdPerPage)\n      .map((product, index) => {\n        return (\n          <div key={index} className=\"mb-4 mr-2\">\n            <Card\n              product={product}\n              reloadCartItems={reloadCartItems}\n              setReloadCartItems={setReloadCartItems}\n            />\n          </div>\n        );\n      });\n\n  return (\n    <Base cartProdCount={cartProducts.length} >\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={(e) => {\n          setSearchInput(e.target.value);\n        }}\n        placeholder=\"Search for products...\"\n        id=\"inputBar\"\n      />\n      <ShowCarousel />\n      <div className=\"text-center\" style={{ marginTop: \"10px\" }}>\n        <div id=\"product-container\" style={{ width: \"100%\" }}>\n          {displayProd()}\n        </div>\n      </div>\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={totalPages}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </Base>\n  );\n};\n\nexport default Home;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/Signup.js",["158"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { loadCart } from \"../core/helper/cartHelper\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { signup, signinWithGoogle, authenticate, isAutheticated } from \"../auth/helper\";\nimport \"./style.css\";\n\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: false,\n    didRedirect: false,\n  });\n\n  const { name, email, password, error, success,didRedirect } = values;\n  const { user } = isAutheticated();\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />;\n      } else {\n        return <Redirect to=\"/\" />;\n      }\n    }\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    const data = signup({ name, email, password })\n      .then((data) => {\n        console.log(data);\n        if (data.error) {\n          setValues({ ...values, error: data.error, success: false });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            success: true,\n          });\n        }\n      })\n      .catch((err) => console.log(\"Error in signup\", err));\n  };\n\n  const googleOnSubmit = (responce) => {\n    signinWithGoogle(responce).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error, loading: false });\n      } else {\n        authenticate(data, () => {\n          setValues({\n            ...values,\n            didRedirect: true,\n          });\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n  }, []);\n\n  const signUpForm = () => {\n    return (\n      <div className=\"box\">\n        <form>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              required\n              onChange={handleChange(\"name\")}\n              value={name}\n            />\n            <div className=\"underline\"></div>\n            <label>Enter Your Name</label>\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              required\n              onChange={handleChange(\"email\")}\n              value={email}\n            />\n            <div className=\"underline\"></div>\n            <label>Enter Your Email</label>\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"password\"\n              required\n              onChange={handleChange(\"password\")}\n              value={password}\n            />\n            <div className=\"underline\"></div>\n            <label>Enter a strong Password</label>\n          </div>\n          <button className=\"submitbutton\" onClick={onSubmit}>Signup</button>\n        </form>\n        <div>\n          <GoogleLogin\n            id=\"google-signin-btn\"\n            theme=\"dark\"\n            clientId={process.env.REACT_APP_GOOGLE_CLIENTID}\n            buttonText=\"Signup ith Google\"\n            onSuccess={googleOnSubmit}\n            onFailure={googleOnSubmit}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const successMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please{\" \"}\n            <Link to=\"/signin\">Login Here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign up page\" description=\"A page for user to sign up!\" cartProdCount={cartProducts.length}>\n      {errorMessage()}\n      {successMessage()}\n      {signUpForm()}\n      {performRedirect()}\n    </Base>\n  );\n};\n\nexport default Signup;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/Signin.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/UserDashBoard.js",["159","160","161"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { orderDetails } from \"./helper/userapicalls\";\nimport Base from \"../core/Base\";\nimport { loadCart } from \"../core/helper/cartHelper\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./userdashBoard.css\";\nimport emailjs from \"emailjs-com\";\nimport swal from \"sweetalert\";\n\nconst UserDashBoard = () => {\n  const { user, token } = isAutheticated();\n  const [orders, setOrders] = useState([]);\n  const {\n    user: { name, email, role },\n  } = isAutheticated();\n\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const [showCart, setShowCart] = useState(false);\n\n  const showingContactPage = () => {\n    setShowCart(true);\n  };\n  const sendEmail = (e) => {\n    e.preventDefault();\n    emailjs\n      .sendForm(\n        \"service_d1pld4t\",\n        \"template_igiztjj\",\n        e.target,\n        \"user_t6g7XtPPRVhNiAKN8GnuY\"\n      )\n      .then(\n        (result) => {\n          console.log(\"\");\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    closeCart();\n    setTimeout(displaySuccessMessage, 2500)\n  };\n\n  const displaySuccessMessage = () => {\n    swal({\n      title: \"We got your issue\",\n      text: \"Your issue is successfully mailed to the seller\",\n      icon: \"success\",\n      button: \"Thanks for Contacting Us\",\n    });\n  }\n\n  const ContactUsPage = () => {\n    return (\n      <Modal show={showCart} onHide={() => closeCart()}>\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\" id=\"exampleModalLabel\">\n            Submit your issue\n          </h3>\n          <button\n            onClick={() => closeCart()}\n            style={{\n              backgroundColor: \"transparent\",\n              textAlign: \"right\",\n              borderStyle: \"none\",\n              width: \"40px\",\n              fontSize: \"21px\",\n              textAlign: \"center\",\n              fontWeight: \"bolder\"\n            }}\n          >\n            X\n          </button>\n        </div>\n        <Modal.Body style={{paddingTop: \"0\"}}>\n          <form onSubmit={sendEmail}>\n            <input\n              onChange={() => console.log(\"\")}\n              style={{ display: \"none\" }}\n              name=\"name\"\n              value={user.name}\n            />\n            <input\n              onChange={() => console.log(\"\")}\n              style={{ display: \"none\" }}\n              name=\"useremail\"\n              value={user.email}\n            />\n            <div className=\"mb-3\">\n              <select className=\"form-control\" name=\"ordername\">\n                <option>Select Order</option>\n                {orders\n                  .slice()\n                  .reverse()\n                  .slice(0, 8)\n                  .map((order, index) => (\n                    <option key={index}>{order.name}</option>\n                  ))}\n              </select>\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"recipient-name\" className=\"col-form-label\">\n                Subject of Your Issue:\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"recipient-name\"\n                name=\"subject\"\n                placeholder=\"Subject\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"recipient-name\" className=\"col-form-label\">\n                Describe Your Issue:\n              </label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"recipient-name\"\n                name=\"description\"\n                placeholder=\"Description\"\n                style={{height: \"100px\"}}\n                required\n              ></textarea>\n            </div>\n            <button\n              style={{ fontSize: \"20px\", width: \"120px\", marginLeft: \"38%\", borderRadius: \"20px\" }}\n              type=\"submit\"\n              className=\"btn btn-sm btn-dark\"\n            >\n              Submit\n            </button>\n          </form>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n\n  const closeCart = () => {\n    setShowCart(false);\n  };\n\n  const preload = () => {\n    orderDetails(user._id, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n    setCartProducts(loadCart());\n  }, []);\n\n  const userLeftSide = () => {\n    return (\n      <div className=\"card\">\n        <div\n          className=\"card-header\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <h4 className=\"text-dark fw-bolder\" style={{ width: \"60%\" }}>\n            User Info:{\" \"}\n          </h4>\n          <button\n            onClick={() => showingContactPage()}\n            className=\"btn btn-warning btn-sm\"\n            style={{ width: \"30%\", fontSize: \"17px\", fontWeight: \"bold\" }}\n          >\n            Contact Us\n          </button>\n        </div>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <span\n              className=\"badge badge-success mr-2\"\n              style={{ fontSize: \"22px\" }}\n            >\n              Name:\n            </span>{\" \"}\n            <h4 className=\"text-dark mt-2\" style={{ display: \"inline-block\" }}>\n              {name.toUpperCase()}\n            </h4>\n          </li>\n          <li className=\"list-group-item\">\n            <span\n              className=\"badge badge-success mr-2\"\n              style={{ fontSize: \"22px\" }}\n            >\n              Email:\n            </span>{\" \"}\n            <h4 className=\"text-dark\" style={{ display: \"inline-block\" }}>\n              {email}\n            </h4>\n          </li>\n        </ul>\n        {ContactUsPage()}\n      </div>\n    );\n  };\n\n  const userRightSide = () => {\n    return (\n      <Fragment>\n        <h3\n          style={{\n            display: \"inline-block\",\n            borderBottom: \"4px solid green\",\n            marginBottom: \"10px\",\n            borderRadius: \"10px\",\n          }}\n        >\n          -------: Your Order History :-------\n        </h3>\n        <table className=\"table table-warning\">\n          <thead>\n            <tr style={{ fontSize: \"23px\", color: \"green\" }}>\n              <th scope=\"col\">Order Name</th>\n              <th scope=\"col\">Order Description</th>\n              <th scope=\"col\">Order Category</th>\n              <th scope=\"col\">Order Amount ($)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders\n              .slice()\n              .reverse()\n              .map((order, index) => {\n                return (\n                  <tr\n                    className=\"text-black\"\n                    style={{ fontWeight: \"bolder\" }}\n                    key={index}\n                  >\n                    <td>{order.name}</td>\n                    <td>{order.description}</td>\n                    <td>{order.category.name}</td>\n                    <td>{order.amount}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Base title=\"UserDashBoard page\" cartProdCount={cartProducts.length}>\n      <div className=\"mt-5\" id=\"userdashboard-container\">\n        <div id=\"userDetails\" style={{ margin: \"0 auto\" }}>\n          {userLeftSide()}\n        </div>\n        <div id=\"orderDetails\">{userRightSide()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UserDashBoard;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/AdminDashBoard.js",["162"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { Link } from \"react-router-dom\";\nimport { loadCart } from \"../core/helper/cartHelper\";\nimport \"./admindashboard.css\";\n\nconst AdminDashBoard = () => {\n  const {\n    user: { name, email, role },\n  } = isAutheticated();\n\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const adminLeftSide = () => {\n    return (\n      <div className=\"card\">\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\n        <ul className=\"list-group\" style={{ fontSize: \"25px\" }}>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\n              Create Categories\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\n              Manage Categories\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\n              Create Product\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\n              Manage Products\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\n              Manage Orders\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  const adminRightSide = () => {\n    return (\n      <div className=\"card mb-4\">\n        <h4 className=\"card-header\">Admin Information</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <span\n              className=\"badge badge-success mr-2\"\n              style={{ fontSize: \"22px\" }}\n            >\n              Name:\n            </span>{\" \"}\n            {name.toUpperCase()}\n          </li>\n          <li className=\"list-group-item\">\n            <span\n              className=\"badge badge-success mr-2\"\n              style={{ fontSize: \"22px\" }}\n            >\n              Email:\n            </span>{\" \"}\n            {email}\n          </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-danger\">Admin Area</span>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n  }, []);\n\n  return (\n    <Base\n      cartProdCount={cartProducts.length}\n      title=\"Welcome to admin area\"\n      description=\"Manage all of your products here\"\n      className=\"container bg-success p-4 mt-5\"\n    >\n      <div id=\"admin-container\">\n        <div id=\"adminright\">{adminRightSide()}</div>\n        <div id=\"adminleft\" style={{textAlign: \"center\", margin: \"0 auto\"}}>{adminLeftSide()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AdminDashBoard;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/NotFound404Page.js",["163"],"import React from \"react\";\nimport Base from \"../core/Base\";\n\nconst NotFound404Page = () => {\n  return (\n    <div>\n      <Base className=\"p-0\">\n      <div style={{ backgroundSize: \"cover\", padding: \"0\" }}>\n          <img\n            src={\n              \"https://wallpapercave.com/wp/wp2414726.jpg\"\n            }\n            alt=\"photo\"\n            style={{width: \"100%\", height: \"70%\", margin: \"0\"}}\n          />\n        </div>\n      </Base>\n        \n      \n    </div>\n  );\n};\n\nexport default NotFound404Page;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageCategories.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/AddCategory.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/AddProduct.js",["164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCategories, createProduct } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { loadCart } from \"../core/helper/cartHelper\";\n\nconst AddProduct = () => {\n  const { user, token } = isAutheticated();\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\",\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData,\n  } = values;\n\n  const preload = () => {\n    getAllCategories().then((data) => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ ...values, categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    createProduct(user._id, token, formData).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n    preload();\n  }, []);\n\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} created successfully</h4>\n    </div>\n  );\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Create Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      cartProdCount={cartProducts.length}\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4 mt-5\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddProduct;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageProducts.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateCategory.js",["169","170","171","172"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getACategory, updateCategory } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { loadCart } from \"../core/helper/cartHelper\";\n\n\nconst UpdateCategory = ({ match }) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    loading: false,\n    error: \"\",\n    getaRedirect: false,\n    createdCategory: \"\",\n  });\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const { name, loading, error, getaRedirect, createdCategory } = values;\n\n  const preload = (categoryId) => {\n    getACategory(categoryId, user._id, token).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n    preload(match.params.categoryId);\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    updateCategory(match.params.categoryId, user._id, token, { name }).then(\n      (data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            loading: false,\n            createdCategory: data.name,\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = (event) => {\n    const name = event.target.value;\n    setValues({ ...values, name });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdCategory ? \"\" : \"none\" }}\n    >\n      <h4>{createdCategory} updated successfully</h4>\n    </div>\n  );\n\n  const createCategoryForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <input\n          name=\"name\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Category\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n    cartProdCount={cartProducts.length}\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <Link to=\"/admin/categories\" className=\"btn btn-md btn-dark ml-4 mb-3\">\n        Manage Category\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createCategoryForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateCategory;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/ManageOrders.js",["173"],"import React, { useState, useEffect } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserEdit, faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Base from \"./../core/Base\";\nimport { loadCart } from \"../core/helper/cartHelper\";\nimport \"./manageOrder.css\";\nimport { getAllOrders } from \"./helper/adminapicall\";\nimport { Link } from \"react-router-dom\";\n\nconst ManageOrders = () => {\n  const [orders, setOrders] = useState([]);\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const { user, token } = isAutheticated();\n\n  const loadData = () => {\n    getAllOrders(user._id, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n    loadData();\n  }, []);\n\n  return (\n    <Base\n      title=\"Manage Categories\"\n      description=\"Manage categories\"\n      cartProdCount={cartProducts.length}\n    >\n      <h2\n        className=\"heading\"\n        style={{ color: \"#2be877\", marginTop: \"30px\" }}\n      >\n        --------: Manage All Orders Here :--------\n      </h2>\n      <Link\n        className=\"btn btn-info\"\n        style={{ marginBottom: \"15px\" }}\n        to={`/admin/dashboard`}\n      >\n        <span className=\"\">\n          Admin Home\n          <FontAwesomeIcon\n            style={{ fontSize: \"25px\", color: \"#fbbc20\" }}\n            icon={faHouseUser}\n          />\n        </span>\n      </Link>\n      <table className=\"table table-warning\">\n        <thead>\n          <tr style={{ fontSize: \"23px\", color: \"green\" }}>\n            <th scope=\"col\">Product Details</th>\n            <th scope=\"col\">Customer Name</th>\n            <th scope=\"col\">Total Amount ($)</th>\n            <th scope=\"col\">Order Status</th>\n            <th scope=\"col\">Last Update</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders\n            .slice()\n            .reverse()\n            .map((order, index) => {\n              return (\n                <tr\n                  className=\"text-black bg-info\"\n                  style={{ fontWeight: \"bolder\" }}\n                  key={index}\n                >\n                  <td>\n                    {order.products.map((product, index) => {\n                      return (\n                        <ul className=\"list-group mt-2\" key={index}>\n                          {order.products.length > 1 && (\n                            <h3\n                              style={{ color: \"#b90234\", fontWeight: \"bolder\" }}\n                            >\n                              Product {index + 1}\n                            </h3>\n                          )}\n                          <li className=\"list-group-item\">\n                            <span\n                              className=\"badge badge-success mr-2\"\n                              style={{ fontSize: \"19px\" }}\n                            >\n                              Product Name:\n                            </span>{\" \"}\n                            {product.name}\n                          </li>\n                          <li className=\"list-group-item\">\n                            <span\n                              className=\"badge badge-success mr-2\"\n                              style={{ fontSize: \"19px\" }}\n                            >\n                              Product Count:\n                            </span>{\" \"}\n                            {product.count}\n                          </li>\n                          <li className=\"list-group-item\">\n                            <span\n                              className=\"badge badge-success mr-2\"\n                              style={{ fontSize: \"19px\" }}\n                            >\n                              Product Amount:\n                            </span>{\" \"}\n                            {product.price}\n                          </li>\n                        </ul>\n                      );\n                    })}\n                  </td>\n                  <td style={{ fontSize: \"26px\" }}>{order.user.name}</td>\n                  <td style={{ fontSize: \"26px\" }}>{order.amount}</td>\n                  <td style={{ fontSize: \"26px\" }}>\n                    {order.status}\n                    <Link\n                      style={{ color: \"#7bf985\", marginLeft: \"10px\" }}\n                      to={`/admin/order/update/${order._id}`}\n                    >\n                      <FontAwesomeIcon\n                        style={{ fontSize: \"20px\" }}\n                        icon={faUserEdit}\n                      />\n                    </Link>\n                  </td>\n                  <td style={{ fontSize: \"26px\" }}>{order.updated}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </Base>\n  );\n};\n\nexport default ManageOrders;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateProduct.js",["174","175","176","177"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  getAllCategories,\n  getProduct,\n  updateProduct\n} from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { loadCart } from \"../core/helper/cartHelper\";\n\n\n\nconst UpdateProduct = ({ match }) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = productId => {\n    getProduct(productId).then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        preloadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  const performRedirect = () => {\n    if (getaRedirect) {\n      return <Redirect to=\"/admin/products\" />;\n    }\n  };\n\n  const preloadCategories = () => {\n    getAllCategories().then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n    preload(match.params.productId);\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    updateProduct(match.params.productId, user._id, token, formData).then(\n      data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            photo: \"\",\n            stock: \"\",\n            loading: false,\n            createdProduct: data.name,\n            getaRedirect: true\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} updated successfully</h4>\n    </div>\n  );\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n    cartProdCount={cartProducts.length}\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4 mt-5\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createProductForm()}\n          {performRedirect()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateProduct;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/UpdateOrder.js",["178","179","180","181","182","183"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { isAutheticated } from \"../auth/helper\";\nimport Base from \"./../core/Base\";\nimport { loadCart } from \"../core/helper/cartHelper\";\n\nimport {\n  getAllStatusCode,\n  getAOrder,\n  updateOrderStatus,\n} from \"./helper/adminapicall\";\n\nconst UpdateOrder = ({ match }) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    status: \"\",\n    loading: false,\n    error: \"\",\n    getaRedirect: false,\n    createdOrder: \"\",\n  });\n  const [cartProducts, setCartProducts] = useState([]);\n\n  const [statusCode, setStatusCode] = useState([]);\n\n  const { status, loading, error, getaRedirect, createdOrder } = values;\n\n  const preload = (orderId) => {\n    getAOrder(orderId, user._id, token).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          status: data.status,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n    preload(match.params.orderId);\n  }, []);\n\n  const performRedirect = () => {\n    if (getaRedirect) {\n      return <Redirect to=\"/admin/orders\" />;\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    updateOrderStatus(match.params.orderId, user._id, token, { status }).then(\n      (data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            status: \"\",\n            loading: false,\n            createdOrder: data.status,\n            getaRedirect: true,\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = (name) => (event) => {\n    const value = event.target.value;\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdOrder ? \"\" : \"none\" }}\n    >\n      <h4>{createdOrder} updated successfully</h4>\n    </div>\n  );\n\n  const updateStatusForm = () => {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <select onChange={handleChange(\"status\")} className=\"form-control\">\n            <option>Select</option>\n            <option value=\"Recieved\">Recieved</option>\n            <option value=\"Processing\">Processing</option>\n            <option value=\"Shipped\">Shipped</option>\n            <option value=\"Delivered\">Delivered</option>\n            <option value=\"Cancelled\">Cancelled</option>\n          </select>\n          <button\n            type=\"submit\"\n            onClick={onSubmit}\n            className=\"btn btn-outline-success mt-3\"\n          >\n            Update Status\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <Base\n    cartProdCount={cartProducts.length}\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4 mt-5\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {updateStatusForm()}\n          {performRedirect()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateOrder;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/PrivateRoutes.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/AdminRoutes.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Base.js",["184"],"import React from \"react\";\nimport NavMenu from \"./NavMenu\";\nimport ReactNotification from \"react-notifications-component\";\n\n\nconst Base = ({\n  className = \"bg-dark text-white p-0 m-0\",\n  children,\n  cartProdCount,\n}) => (\n  <div>\n    <NavMenu cartProdCount={cartProdCount} />\n    <div className=\"container-fluid\">\n      <div className={className} style={{ marginButtom: \"100px\" }}>\n        {children}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Base;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Card.js",["185","186","187","188"],"import React, { useState, useEffect } from \"react\";\nimport ImageHelper from \"./helper/ImageHelper\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  successNotification,\n  loadCart,\n  isExistInCart,\n  increaseCartProdCount,\n  decreaseCartProdCount,\n  countcartprod,\n} from \"./helper/cartHelper\";\nimport \"./card.css\";\n\nconst Card = ({\n  product,\n  addtoCart = true,\n  removeFromCart = false,\n  setReload = (f) => f,\n  //   function(f){return f}\n  reload = undefined,\n  setReloadCartItems = (f) => f,\n  //   function(f){return f}\n  reloadCartItems = undefined,\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [prodCount, setProdCount] = useState(\n    countcartprod(product, removeFromCart)\n  );\n  const [cartProducts, setCartProducts] = useState([]);\n  const cartTitle = product ? product.name : \"A photo from pexels\";\n  const cartDescrption = product ? product.description : \"Default description\";\n  const cartPrice = product ? product.price : \"DEFAULT\";\n\n  const errorNotification = () => {};\n\n  const addToCart = () => {\n    if (addItemToCart(product)) {\n      addItemToCart(product);\n      // alert(`${product.name} successfully added to the cart`);\n      setReloadCartItems(!reloadCartItems);\n    }\n  };\n\n  useEffect(() => {\n    setCartProducts(loadCart());\n  }, [reloadCartItems]);\n\n  const getARedirect = (redirect) => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCart = (addtoCart) => {\n    if (addToCart && !removeFromCart) {\n      if (isExistInCart(product)) {\n        return (\n          <Link to=\"/cart\">\n            <button className=\"btn btn-block btn-outline-warning mt-2 mb-2\">\n              Go to Cart\n            </button>\n          </Link>\n        );\n      } else {\n        return (\n          <button\n            onClick={() => {\n              addToCart();\n              setReloadCartItems(!reloadCartItems);\n            }}\n            className=\"btn btn-block btn-outline-success mt-2 mb-2\"\n          >\n            Add to Cart\n          </button>\n        );\n      }\n    }\n  };\n\n  const increaseProdCount = () => {\n    increaseCartProdCount(product, countcartprod(product, removeFromCart));\n    setProdCount(countcartprod(product, removeFromCart));\n    setReload(!reload);\n  };\n\n  const increaseBtn = (removeFromCart) => {\n    return (\n      removeFromCart && (\n        <button\n          onClick={increaseProdCount}\n          className=\"btn increase-decrease-btns bg-success\"\n        >\n          +\n        </button>\n      )\n    );\n  };\n\n  const decreaseProdCount = () => {\n    if (prodCount > 1) {\n      decreaseCartProdCount(product, countcartprod(product, removeFromCart));\n      setProdCount(countcartprod(product, removeFromCart));\n      setReload(!reload);\n    }\n  };\n\n  const decreaseBtn = (removeFromCart) => {\n    return (\n      removeFromCart && (\n        <button\n          onClick={decreaseProdCount}\n          className=\"btn increase-decrease-btns bg-danger\"\n        >\n          -\n        </button>\n      )\n    );\n  };\n\n  const countProd = (removeFromCart) => {\n    if (removeFromCart) {\n      return (\n        <span id=\"count-container\">\n          {countcartprod(product, removeFromCart)}\n        </span>\n      );\n    }\n  };\n\n  const showRemoveFromCart = (removeFromCart) => {\n    if (removeFromCart) {\n      return (\n        <button\n          onClick={() => {\n            removeItemFromCart(product._id);\n            setReload(!reload);\n          }}\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\n        >\n          Remove from Cart\n        </button>\n      );\n    }\n  };\n  return (\n    <div\n      className=\"card text-white bg-dark border border-info mb-2 \"\n      id=\"card-container\"\n    >\n      <div className=\"card-header lead\">{cartTitle}</div>\n      <div className=\"card-body\">\n        {getARedirect(redirect)}\n        <ImageHelper product={product} />\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\n          {cartDescrption}\n        </p>\n        <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cartPrice}</p>\n        <div className=\"row\">\n          <div className=\"col-12\">{showAddToCart(addtoCart)}</div>\n          <div className=\"count-container\">\n            {decreaseBtn(removeFromCart)}\n            {countProd(removeFromCart)}\n            {increaseBtn(removeFromCart)}\n          </div>\n          <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/backend.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/StripeCheckout.js",["189","190","191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart, countcartprod } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDollarSign, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./stripeCheckout.css\";\nimport swal from \"sweetalert\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = (f) => f,\n  reload = undefined,\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\",\n  });\n\n  const token = isAutheticated() && isAutheticated().token;\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    if (products.length > 0) {\n      products.map((p) => {\n        amount = amount + p.price;\n        amount = amount * countcartprod(p, true);\n      });\n      if (amount < 7) {\n        amount += 1;\n      }\n      return amount;\n    }\n  };\n\n  const makePayment = (token) => {\n    products.map((product) => {\n      product.count = countcartprod(product, true);\n    })\n    const body = {\n      token,\n      products,\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    return fetch(`${API}/payment/stripe`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        var todayDate = new Date();\n\n        const orderData = {\n          products: products,\n          amount: getFinalAmount(),\n          updated: todayDate.toDateString(),\n        };\n        createOrder(\n          isAutheticated().user._id,\n          isAutheticated().token,\n          orderData\n        );\n        //call further methods\n        swal({\n          title: \"Order Successfully Recieved\",\n          text: \"Thanks for Ordering\",\n          icon: \"success\",\n          button: \"Thank You\",\n        });\n\n        cartEmpty(() => {\n          console.log(\"\");\n        });\n        setReload(!reload);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const showStripeButton = () => {\n    return isAutheticated() ? (\n      <StripeCheckoutButton\n        stripeKey={process.env.REACT_APP_PUBLISHABLEKEY}\n        token={makePayment}\n        amount={getFinalAmount() * 100}\n        name=\"Buy Products\"\n        shippingAddress\n        billingAddress\n      >\n        <button className=\"btn btn-success\" style={{ width: \"130px\" }}>\n          Buy Now\n        </button>\n      </StripeCheckoutButton>\n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-warning\">Signin</button>\n      </Link>\n    );\n  };\n\n  return (\n    <div style={{ alignItems: \"center\", marginLeft: \"20%\", marginTop: \"20px\" }}>\n      <div id=\"payment-details-container\">\n        <h2\n          style={{\n            color: \"#6b6b6b\",\n            width: \"70%\",\n            textAlign: \"initial\",\n            margin: \"0\",\n          }}\n        >\n          Price Details\n        </h2>\n        <div className=\"dotted-line\" style={{ marginBottom: \"20px\" }}></div>\n        <div className=\"eachDetails\">\n          <h4>\n            {`Price(${products.length}`}\n            {products.length < 2 ? \" item)\" : \" items)\"}\n          </h4>\n          <h4>\n            <FontAwesomeIcon\n              style={{ fontSize: \"22px\", color: \"black\", marginRight: \"3px\" }}\n              icon={faDollarSign}\n            />\n            {getFinalAmount() <= 7 ? getFinalAmount() - 1 : getFinalAmount()}\n          </h4>\n        </div>\n\n        <div className=\"eachDetails\">\n          <h4>Delivery Charges</h4>\n          <h4 c>\n            {getFinalAmount() < 7 ? (\n              <FontAwesomeIcon\n                style={{ fontSize: \"22px\", color: \"black\", marginRight: \"3px\" }}\n                icon={faDollarSign}\n              />\n            ) : (\n              \"\"\n            )}\n            {getFinalAmount() <= 7 ? \"1\" : \"Free\"}\n          </h4>\n        </div>\n\n        <div className=\"dotted-line\"></div>\n\n        <div className=\"eachDetails text-success\">\n          <h3>Total Billing Amount</h3>\n          <h3>\n            <FontAwesomeIcon\n              style={{ fontSize: \"25px\", color: \"gold\", marginRight: \"3px\" }}\n              icon={faDollarSign}\n            />\n            {getFinalAmount()}\n          </h3>\n        </div>\n      </div>\n      <div className=\"total-amount-container\">\n        <h5 className=\"text-white\">\n          <FontAwesomeIcon\n            style={{ fontSize: \"25px\", color: \"white\", marginRight: \"3px\" }}\n            icon={faUserShield}\n          />\n          Pay Securely\n        </h5>\n        {products.length >= 1 && showStripeButton()}\n      </div>\n    </div>\n  );\n};\n\nexport default StripeCheckout;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/Carousel.js",["197"],"import React, { useState, useEffect } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport { getAllProducts, deleteProduct } from \"../admin/helper/adminapicall\";\nimport { API } from \"../backend\";\n\nconst ShowCarousel = () => {\n  const [products, setProducts] = useState([]);\n  const size = 5;\n  const preload = () => {\n    getAllProducts().then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n  const startingIndex = Math.floor(Math.random() * products.length);\n  const endingIndex = startingIndex + size;\n  return (\n    <Carousel\n      pause={false}\n      fade={true}\n      controls={false}\n      style={{\n        height: \"600px\",\n        overflow: \"hidden\",\n        width: \"100%\",\n        marginTop: \"10px\",\n      }}\n    >\n      {products.slice(startingIndex, endingIndex).map((product, index) => {\n        return (\n          <Carousel.Item key={index} interval={4000} style={{ width: \"100%\" }}>\n            <img\n              className=\"d-block w-100\"\n              style={{ height: \"550px\" }}\n              src={`${API}/product/photo/${product._id}`}\n              alt=\"First slide\"\n            />\n          </Carousel.Item>\n        );\n      })}\n    </Carousel>\n  );\n};\n\nexport default ShowCarousel;\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/auth/helper/index.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/cartHelper.js",["198","199"],"import ReactNotification from \"react-notifications-component\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\nexport const successNotification = () => {\n  store.addNotification({\n    title: \"product added to cart\",\n    message: \"Successfully added\",\n    type: \"success\",\n    container: \"top-right\",\n    insert: \"top\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n    },\n  });\n};\n\nexport const addItemToCart = (item) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    const isExist = cart.find((x) => x._id === item._id);\n    if (!isExist) {\n      cart.push({\n        ...item,\n        count: 1,\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nexport const increaseCartProdCount = (item, count) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n      const prodIndex = cart.findIndex((cartProd) => {\n        return cartProd._id === item._id;\n      });\n      cart[prodIndex].count = count + 1;\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  }\n};\n\nexport const decreaseCartProdCount = (item, count) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n      const prodIndex = cart.findIndex((cartProd) => {\n        return cartProd._id === item._id;\n      });\n      cart[prodIndex].count = count - 1;\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  }\n};\n\nexport const countcartprod = (item, condition) => {\n  if (condition) {\n    let cart = [];\n    if (typeof window !== undefined) {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      if (cart.length === 0) {\n        return;\n      }\n      const prodIndex = cart.findIndex((cartProd) => {\n        return cartProd._id === item._id;\n      });\n      if(prodIndex === -1){\n        return;\n      } \n      if (cart[prodIndex].count) {\n        return cart[prodIndex].count;\n      }\n    }\n  }\n};\n\nexport const isExistInCart = (item) => {\n  const cart = JSON.parse(localStorage.getItem(\"cart\"));\n  const isExist = cart.find((x) => x._id === item._id);\n  if (isExist) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const loadCart = () => {\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    }\n  }\n};\n\nexport const setCart = () => {\n  if (!localStorage.getItem(\"cart\")) {\n    let cart = [];\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n};\n\nexport const removeItemFromCart = (productId) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.map((product, i) => {\n      if (product._id === productId) {\n        cart.splice(i, 1);\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  return cart;\n};\n\nexport const cartEmpty = (next) => {\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"cart\");\n    let cart = [];\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/coreapicalls.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/user/helper/userapicalls.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/admin/helper/adminapicall.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/orderHelper.js",[],"/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/NavMenu.js",["200"],"import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { isAutheticated, signout } from \"./../auth/helper/index\";\nimport \"./navmenu.css\";\n\nconst currentTab = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: \"#2ecc72\" };\n  } else {\n    return { color: \"#FFFFFF\" };\n  }\n};\n\nconst NavMenu = ({ history, cartProdCount }) => {\n  // console.log(cartProdCount);\n  return (\n    <div style={{ borderBottom: \"1px solid white\" }}>\n      <ul className=\"bg-dark nav-container\" style={{ fontSize: \"21px\" }}>\n        <li className=\"\" style={{ fontWeight: \"bolder\" }}>\n          <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\n            Home\n          </Link>\n        </li>\n\n        {isAutheticated() && (\n          <li className=\"\" style={{ fontWeight: \"bolder\" }}>\n            <Link\n              className=\"nav-link\"\n              to=\"/user/dashboard\"\n              style={currentTab(history, \"/user/dashboard\")}\n            >\n              User Dashboard\n            </Link>\n          </li>\n        )}\n\n        {isAutheticated() && isAutheticated().user.role === 1 && (\n          <li className=\"\" style={{ fontWeight: \"bolder\" }}>\n            <Link\n              className=\"nav-link\"\n              to=\"/admin/dashboard\"\n              style={currentTab(history, \"/admin/dashboard\")}\n            >\n              Admin Dashboard\n            </Link>\n          </li>\n        )}\n\n        <li\n          className=\"\"\n          style={{ fontWeight: \"bolder\", marginTop: \"-4px\" }}\n        >\n          <Link\n            style={currentTab(history, \"/cart\")}\n            className=\"nav-link\"\n            to=\"/cart\"\n          >\n            Cart\n            {cartProdCount > 0 && (\n              <h3\n                style={{\n                  color: \"white\",\n                  fontWeight: \"bolder\",\n                  border: \"2px solid navy\",\n                  borderRadius: \"50%\",\n                  height: \"35px\",\n                  width: \"35px\",\n\n                  display: \"inline-block\",\n                  margin: \"0px\",\n\n                  backgroundColor: \"navy\",\n                  textAlign: \"center\",\n                }}\n              >\n                {cartProdCount}\n              </h3>\n            )}\n          </Link>\n        </li>\n\n        {!isAutheticated() && (\n          <Fragment>\n            <li className=\"\" style={{ fontWeight: \"bolder\" }}>\n              <Link\n                className=\"nav-link\"\n                to=\"/signin\"\n                style={currentTab(history, \"/signin\")}\n              >\n                Signin\n              </Link>\n            </li>\n            <li className=\"\" style={{ fontWeight: \"bolder\" }}>\n              <Link\n                className=\"nav-link\"\n                to=\"/signup\"\n                style={currentTab(history, \"/signup\")}\n              >\n                Signup\n              </Link>\n            </li>\n          </Fragment>\n        )}\n\n        {isAutheticated() && (\n          <li\n            className=\"\"\n            style={{\n              fontWeight: \"bolder\",\n              cursor: \"pointer\",\n              marginRight: \"0px\",\n            }}\n          >\n            <span\n              className=\"nav-link text-warning\"\n              onClick={() => {\n                signout(() => {\n                  history.push(\"/\");\n                });\n              }}\n            >\n              Signout\n            </span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(NavMenu);\n","/home/sourav/Desktop/Ecommerce-Website/projfrontend/src/core/helper/ImageHelper.js",["201"],"import React from \"react\";\nimport { API } from \"../../backend\";\n\nconst ImageHelper = ({ product }) => {\n  const imageurl = product\n    ? `${API}/product/photo/${product._id}`\n    : `https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`;\n  return (\n    <div\n      className=\"rounded border border-success p-2 mb-2\"\n      style={{\n        height: \"300px\",\n        width: \"100%\",\n        overflow: \"hidden\",\n        backgroundSize: \"contain\",\n      }}\n    >\n      <img\n        src={imageurl}\n        alt=\"photo\"\n        className=\"mb-3 rounded\"\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n      />\n    </div>\n  );\n};\n\nexport default ImageHelper;\n",{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":5,"column":31,"nodeType":"208","messageId":"209","endLine":5,"endColumn":44},{"ruleId":"206","severity":1,"message":"210","line":13,"column":10,"nodeType":"208","messageId":"209","endLine":13,"endColumn":22},{"ruleId":"206","severity":1,"message":"211","line":52,"column":9,"nodeType":"208","messageId":"209","endLine":52,"endColumn":21},{"ruleId":"206","severity":1,"message":"212","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":13},{"ruleId":"206","severity":1,"message":"213","line":14,"column":10,"nodeType":"208","messageId":"209","endLine":14,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":46,"column":21,"nodeType":"216","messageId":"217","endLine":46,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":47,"column":25,"nodeType":"220","messageId":"221","endLine":47,"endColumn":27},{"ruleId":"206","severity":1,"message":"222","line":44,"column":11,"nodeType":"208","messageId":"209","endLine":44,"endColumn":15},{"ruleId":"206","severity":1,"message":"223","line":15,"column":26,"nodeType":"208","messageId":"209","endLine":15,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":70,"column":15,"nodeType":"226","messageId":"221","endLine":70,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":160,"column":6,"nodeType":"229","endLine":160,"endColumn":8,"suggestions":"230"},{"ruleId":"206","severity":1,"message":"223","line":10,"column":26,"nodeType":"208","messageId":"209","endLine":10,"endColumn":30},{"ruleId":"231","severity":1,"message":"232","line":9,"column":11,"nodeType":"233","endLine":15,"endColumn":13},{"ruleId":"206","severity":1,"message":"234","line":33,"column":5,"nodeType":"208","messageId":"209","endLine":33,"endColumn":13},{"ruleId":"206","severity":1,"message":"235","line":34,"column":5,"nodeType":"208","messageId":"209","endLine":34,"endColumn":12},{"ruleId":"206","severity":1,"message":"213","line":35,"column":5,"nodeType":"208","messageId":"209","endLine":35,"endColumn":10},{"ruleId":"206","severity":1,"message":"236","line":37,"column":5,"nodeType":"208","messageId":"209","endLine":37,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":76,"column":6,"nodeType":"229","endLine":76,"endColumn":8,"suggestions":"237"},{"ruleId":"206","severity":1,"message":"235","line":21,"column":17,"nodeType":"208","messageId":"209","endLine":21,"endColumn":24},{"ruleId":"206","severity":1,"message":"213","line":21,"column":26,"nodeType":"208","messageId":"209","endLine":21,"endColumn":31},{"ruleId":"206","severity":1,"message":"236","line":21,"column":33,"nodeType":"208","messageId":"209","endLine":21,"endColumn":45},{"ruleId":"227","severity":1,"message":"238","line":39,"column":6,"nodeType":"229","endLine":39,"endColumn":8,"suggestions":"239"},{"ruleId":"227","severity":1,"message":"240","line":30,"column":6,"nodeType":"229","endLine":30,"endColumn":8,"suggestions":"241"},{"ruleId":"206","severity":1,"message":"234","line":40,"column":5,"nodeType":"208","messageId":"209","endLine":40,"endColumn":13},{"ruleId":"206","severity":1,"message":"235","line":41,"column":5,"nodeType":"208","messageId":"209","endLine":41,"endColumn":12},{"ruleId":"206","severity":1,"message":"213","line":42,"column":5,"nodeType":"208","messageId":"209","endLine":42,"endColumn":10},{"ruleId":"227","severity":1,"message":"242","line":90,"column":6,"nodeType":"229","endLine":90,"endColumn":8,"suggestions":"243"},{"ruleId":"206","severity":1,"message":"244","line":8,"column":3,"nodeType":"208","messageId":"209","endLine":8,"endColumn":19},{"ruleId":"206","severity":1,"message":"245","line":25,"column":10,"nodeType":"208","messageId":"209","endLine":25,"endColumn":20},{"ruleId":"206","severity":1,"message":"246","line":25,"column":22,"nodeType":"208","messageId":"209","endLine":25,"endColumn":35},{"ruleId":"206","severity":1,"message":"235","line":27,"column":19,"nodeType":"208","messageId":"209","endLine":27,"endColumn":26},{"ruleId":"206","severity":1,"message":"213","line":27,"column":28,"nodeType":"208","messageId":"209","endLine":27,"endColumn":33},{"ruleId":"227","severity":1,"message":"247","line":45,"column":6,"nodeType":"229","endLine":45,"endColumn":8,"suggestions":"248"},{"ruleId":"206","severity":1,"message":"249","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":25},{"ruleId":"206","severity":1,"message":"250","line":7,"column":3,"nodeType":"208","messageId":"209","endLine":7,"endColumn":22},{"ruleId":"206","severity":1,"message":"251","line":27,"column":20,"nodeType":"208","messageId":"209","endLine":27,"endColumn":31},{"ruleId":"206","severity":1,"message":"210","line":31,"column":10,"nodeType":"208","messageId":"209","endLine":31,"endColumn":22},{"ruleId":"206","severity":1,"message":"252","line":36,"column":9,"nodeType":"208","messageId":"209","endLine":36,"endColumn":26},{"ruleId":"206","severity":1,"message":"253","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"254","line":3,"column":21,"nodeType":"208","messageId":"209","endLine":3,"endColumn":29},{"ruleId":"206","severity":1,"message":"222","line":18,"column":10,"nodeType":"208","messageId":"209","endLine":18,"endColumn":14},{"ruleId":"206","severity":1,"message":"255","line":18,"column":16,"nodeType":"208","messageId":"209","endLine":18,"endColumn":23},{"ruleId":"206","severity":1,"message":"256","line":25,"column":9,"nodeType":"208","messageId":"209","endLine":25,"endColumn":14},{"ruleId":"206","severity":1,"message":"257","line":26,"column":9,"nodeType":"208","messageId":"209","endLine":26,"endColumn":15},{"ruleId":"214","severity":1,"message":"258","line":31,"column":24,"nodeType":"216","messageId":"259","endLine":31,"endColumn":26},{"ruleId":"214","severity":1,"message":"258","line":43,"column":28,"nodeType":"216","messageId":"259","endLine":43,"endColumn":30},{"ruleId":"206","severity":1,"message":"260","line":3,"column":26,"nodeType":"208","messageId":"209","endLine":3,"endColumn":39},{"ruleId":"206","severity":1,"message":"249","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"258","line":123,"column":27,"nodeType":"216","messageId":"259","endLine":123,"endColumn":29},{"ruleId":"206","severity":1,"message":"261","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":18,"column":7,"nodeType":"233","endLine":23,"endColumn":9},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'countcartprod' is defined but never used.","Identifier","unusedVar","'cartProducts' is assigned a value but never used.","'loadCheckout' is assigned a value but never used.","'API' is defined but never used.","'error' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'role' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["264"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.",["265"],"React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["268"],"'getAllStatusCode' is defined but never used.","'statusCode' is assigned a value but never used.","'setStatusCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.orderId' and 'preload'. Either include them or remove the dependency array.",["269"],"'ReactNotification' is defined but never used.","'successNotification' is defined but never used.","'setRedirect' is assigned a value but never used.","'errorNotification' is assigned a value but never used.","'useEffect' is defined but never used.","'loadCart' is defined but never used.","'setData' is assigned a value but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'deleteProduct' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"270","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [preload]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"284","text":"285"},"Update the dependencies array to be: [loadData]",{"range":"286","text":"287"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"288","text":"289"},"Update the dependencies array to be: [match.params.orderId, preload]",{"range":"290","text":"291"},[4482,4484],"[preload]",[1761,1763],[1059,1061],"[match.params.categoryId, preload]",[903,905],"[loadData]",[1919,1921],"[match.params.productId, preload]",[1130,1132],"[match.params.orderId, preload]"]