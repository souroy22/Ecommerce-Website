[{"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\index.js":"1","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\Routes.js":"2","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Home.js":"3","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Cart.js":"4","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\UserDashBoard.js":"5","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\Signin.js":"6","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\NotFound404Page.js":"7","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\Signup.js":"8","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\AddCategory.js":"9","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageCategories.js":"10","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\AddProduct.js":"11","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageProducts.js":"12","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateProduct.js":"13","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateCategory.js":"14","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageOrders.js":"15","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateOrder.js":"16","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\AdminDashBoard.js":"17","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"18","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"19","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Base.js":"20","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\backend.js":"21","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Card.js":"22","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Carousel.js":"23","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\StripeCheckout.js":"24","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\index.js":"25","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\cartHelper.js":"26","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\coreapicalls.js":"27","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\helper\\userapicalls.js":"28","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\helper\\adminapicall.js":"29","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\NavMenu.js":"30","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\ImageHelper.js":"31","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\orderHelper.js":"32"},{"size":156,"mtime":1611721729877,"results":"33","hashOfConfig":"34"},{"size":2332,"mtime":1613589061881,"results":"35","hashOfConfig":"34"},{"size":2796,"mtime":1613998542228,"results":"36","hashOfConfig":"34"},{"size":2565,"mtime":1613807320296,"results":"37","hashOfConfig":"34"},{"size":7902,"mtime":1614008561741,"results":"38","hashOfConfig":"34"},{"size":4107,"mtime":1613678419779,"results":"39","hashOfConfig":"34"},{"size":533,"mtime":1613588900616,"results":"40","hashOfConfig":"34"},{"size":4806,"mtime":1613678433324,"results":"41","hashOfConfig":"34"},{"size":2817,"mtime":1613546897885,"results":"42","hashOfConfig":"34"},{"size":2818,"mtime":1613847748867,"results":"43","hashOfConfig":"34"},{"size":4862,"mtime":1613546923193,"results":"44","hashOfConfig":"34"},{"size":2915,"mtime":1613546947295,"results":"45","hashOfConfig":"34"},{"size":5699,"mtime":1613546973022,"results":"46","hashOfConfig":"34"},{"size":3111,"mtime":1613546955933,"results":"47","hashOfConfig":"34"},{"size":5057,"mtime":1613846931837,"results":"48","hashOfConfig":"34"},{"size":3573,"mtime":1614177182931,"results":"49","hashOfConfig":"34"},{"size":3087,"mtime":1613585585191,"results":"50","hashOfConfig":"34"},{"size":593,"mtime":1612796843438,"results":"51","hashOfConfig":"34"},{"size":561,"mtime":1612796817494,"results":"52","hashOfConfig":"34"},{"size":485,"mtime":1613492710704,"results":"53","hashOfConfig":"34"},{"size":50,"mtime":1611990713478,"results":"54","hashOfConfig":"34"},{"size":4709,"mtime":1613808662551,"results":"55","hashOfConfig":"34"},{"size":1397,"mtime":1613489333405,"results":"56","hashOfConfig":"34"},{"size":5069,"mtime":1613996291562,"results":"57","hashOfConfig":"34"},{"size":1924,"mtime":1613998502736,"results":"58","hashOfConfig":"34"},{"size":3734,"mtime":1614176870327,"results":"59","hashOfConfig":"34"},{"size":236,"mtime":1613058383596,"results":"60","hashOfConfig":"34"},{"size":422,"mtime":1613162773356,"results":"61","hashOfConfig":"34"},{"size":5277,"mtime":1613376224332,"results":"62","hashOfConfig":"34"},{"size":3690,"mtime":1613799675168,"results":"63","hashOfConfig":"34"},{"size":741,"mtime":1613225988495,"results":"64","hashOfConfig":"34"},{"size":474,"mtime":1613153602201,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"4o2nb8",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\index.js",[],["149","150"],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\Routes.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Home.js",["151","152","153","154"],"import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"./helper/coreapicalls\";\nimport ShowCarousel from \"./Carousel\";\nimport { loadCart, setCart } from \"./helper/cartHelper\";\nimport \"./home.css\";\n\nconst Home = () => {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [cartProducts, setCartProducts] = useState([]);\n  const [reloadCartItems, setReloadCartItems] = useState(false);\n  const displayProdPerPage = 6;\n  const totalVisistedProd = pageNumber * displayProdPerPage;\n\n  const totalPages = Math.ceil(products.length / displayProdPerPage);\n\n  const loadAllProduct = () => {\n    getProducts().then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCart();\n    loadAllProduct();\n    setCartProducts(loadCart());\n  }, [reloadCartItems]);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  const displayProd = () =>\n    products\n      .filter((val) => {\n        if (searchInput == \"\") {\n          return val;\n        } else if (val.name.toLowerCase().includes(searchInput.toLowerCase())) {\n          return val;\n        }\n      })\n      .slice(totalVisistedProd, totalVisistedProd + displayProdPerPage)\n      .map((product, index) => {\n        return (\n          <div key={index} className=\"mb-4 mr-2\">\n            <Card\n              product={product}\n              reloadCartItems={reloadCartItems}\n              setReloadCartItems={setReloadCartItems}\n            />\n          </div>\n        );\n      });\n\n  return (\n    <Base cartProdCount={cartProducts.length} >\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={(e) => {\n          setSearchInput(e.target.value);\n        }}\n        placeholder=\"Search for products...\"\n        id=\"inputBar\"\n      />\n      <ShowCarousel />\n      <div className=\"text-center\" style={{ marginTop: \"10px\" }}>\n        <div id=\"product-container\" style={{ width: \"100%\" }}>\n          {displayProd()}\n        </div>\n      </div>\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={totalPages}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </Base>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Cart.js",["155","156","157"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles.css\";\r\nimport Base from \"./Base\";\r\nimport Card from \"./Card\";\r\nimport { loadCart, cartEmpty, countcartprod } from \"./helper/cartHelper\";\r\nimport StripeCheckout from \"./StripeCheckout\";\r\nimport \"./cart.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cart = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    setProducts(loadCart());\r\n    setCartProducts(loadCart());\r\n  }, [reload]);\r\n\r\n  const emptyCartMessage = () => {\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <h1 style={{ color: \"chartreuse\", width: \"100%\" }}>\r\n          Nothing in your Cart :({\" \"}\r\n        </h1>\r\n        <Link to=\"/\">\r\n          <button className=\"btn btn-info text-white\">Shop Now</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const loadAllProducts = () => {\r\n    return (\r\n      <div>\r\n        <h2 className=\"text-white\">Your Cart Items</h2>\r\n\r\n        {products.map((product, index) => (\r\n          <Card\r\n            key={index}\r\n            product={product}\r\n            removeFromCart={true}\r\n            addtoCart={false}\r\n            setReload={setReload}\r\n            reload={reload}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const loadCheckout = () => {\r\n    return (\r\n      <div>\r\n        <h2>Payment Option</h2>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      cartProdCount={products.length}\r\n      className=\"mt-5\"\r\n      title=\"Cart Page\"\r\n      description=\"Ready to checkout\"\r\n      totalProdCount={products.length}\r\n    >\r\n      {products.length > 0 && (\r\n        <button\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n          onClick={() => {\r\n            cartEmpty(() => {\r\n              console.log(\"\");\r\n            });\r\n            setReload(!reload);\r\n          }}\r\n        >\r\n          Remove All\r\n        </button>\r\n      )}\r\n      <div id=\"cart-container\">\r\n        {products.length > 0 && (\r\n          <div\r\n            className=\"\"\r\n            id=\"stripecheckout\"\r\n            style={{ alignItems: \"center\" }}\r\n          >\r\n            <StripeCheckout\r\n              products={products}\r\n              setReload={setReload}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"\" id=\"cartProd\">\r\n          {products.length > 0 ? loadAllProducts() : emptyCartMessage()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\UserDashBoard.js",["158","159","160"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { orderDetails } from \"./helper/userapicalls\";\r\nimport Base from \"../core/Base\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"./userdashBoard.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst UserDashBoard = () => {\r\n  const { user, token } = isAutheticated();\r\n  const [orders, setOrders] = useState([]);\r\n  const {\r\n    user: { name, email, role },\r\n  } = isAutheticated();\r\n\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const [showCart, setShowCart] = useState(false);\r\n\r\n  const showingContactPage = () => {\r\n    setShowCart(true);\r\n  };\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        \"service_d1pld4t\",\r\n        \"template_igiztjj\",\r\n        e.target,\r\n        \"user_t6g7XtPPRVhNiAKN8GnuY\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(\"\");\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n    closeCart();\r\n    setTimeout(displaySuccessMessage, 2500)\r\n  };\r\n\r\n  const displaySuccessMessage = () => {\r\n    swal({\r\n      title: \"We got your issue\",\r\n      text: \"Your issue is successfully mailed to the seller\",\r\n      icon: \"success\",\r\n      button: \"Thanks for Contacting Us\",\r\n    });\r\n  }\r\n\r\n  const ContactUsPage = () => {\r\n    return (\r\n      <Modal show={showCart} onHide={() => closeCart()}>\r\n        <div className=\"modal-header\">\r\n          <h3 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            Submit your issue\r\n          </h3>\r\n          <button\r\n            onClick={() => closeCart()}\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              textAlign: \"right\",\r\n              borderStyle: \"none\",\r\n              width: \"40px\",\r\n              fontSize: \"21px\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"bolder\"\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n        <Modal.Body style={{paddingTop: \"0\"}}>\r\n          <form onSubmit={sendEmail}>\r\n            <input\r\n              onChange={() => console.log(\"\")}\r\n              style={{ display: \"none\" }}\r\n              name=\"name\"\r\n              value={user.name}\r\n            />\r\n            <input\r\n              onChange={() => console.log(\"\")}\r\n              style={{ display: \"none\" }}\r\n              name=\"useremail\"\r\n              value={user.email}\r\n            />\r\n            <div className=\"mb-3\">\r\n              <select className=\"form-control\" name=\"ordername\">\r\n                <option>Select Order</option>\r\n                {orders\r\n                  .slice()\r\n                  .reverse()\r\n                  .slice(0, 8)\r\n                  .map((order, index) => (\r\n                    <option key={index}>{order.name}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"recipient-name\" className=\"col-form-label\">\r\n                Subject of Your Issue:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"recipient-name\"\r\n                name=\"subject\"\r\n                placeholder=\"Subject\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"recipient-name\" className=\"col-form-label\">\r\n                Describe Your Issue:\r\n              </label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"recipient-name\"\r\n                name=\"description\"\r\n                placeholder=\"Description\"\r\n                style={{height: \"100px\"}}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              style={{ fontSize: \"20px\", width: \"120px\", marginLeft: \"38%\", borderRadius: \"20px\" }}\r\n              type=\"submit\"\r\n              className=\"btn btn-sm btn-dark\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const closeCart = () => {\r\n    setShowCart(false);\r\n  };\r\n\r\n  const preload = () => {\r\n    orderDetails(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setOrders(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n    setCartProducts(loadCart());\r\n  }, []);\r\n\r\n  const userLeftSide = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div\r\n          className=\"card-header\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <h4 className=\"text-dark fw-bolder\" style={{ width: \"60%\" }}>\r\n            User Info:{\" \"}\r\n          </h4>\r\n          <button\r\n            onClick={() => showingContactPage()}\r\n            className=\"btn btn-warning btn-sm\"\r\n            style={{ width: \"30%\", fontSize: \"17px\", fontWeight: \"bold\" }}\r\n          >\r\n            Contact Us\r\n          </button>\r\n        </div>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              className=\"badge badge-success mr-2\"\r\n              style={{ fontSize: \"22px\" }}\r\n            >\r\n              Name:\r\n            </span>{\" \"}\r\n            <h4 className=\"text-dark mt-2\" style={{ display: \"inline-block\" }}>\r\n              {name.toUpperCase()}\r\n            </h4>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              className=\"badge badge-success mr-2\"\r\n              style={{ fontSize: \"22px\" }}\r\n            >\r\n              Email:\r\n            </span>{\" \"}\r\n            <h4 className=\"text-dark\" style={{ display: \"inline-block\" }}>\r\n              {email}\r\n            </h4>\r\n          </li>\r\n        </ul>\r\n        {ContactUsPage()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const userRightSide = () => {\r\n    return (\r\n      <Fragment>\r\n        <h3\r\n          style={{\r\n            display: \"inline-block\",\r\n            borderBottom: \"4px solid green\",\r\n            marginBottom: \"10px\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          -------: Your Order History :-------\r\n        </h3>\r\n        <table className=\"table table-warning\">\r\n          <thead>\r\n            <tr style={{ fontSize: \"23px\", color: \"green\" }}>\r\n              <th scope=\"col\">Order Name</th>\r\n              <th scope=\"col\">Order Description</th>\r\n              <th scope=\"col\">Order Category</th>\r\n              <th scope=\"col\">Order Amount ($)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders\r\n              .slice()\r\n              .reverse()\r\n              .map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    className=\"text-black\"\r\n                    style={{ fontWeight: \"bolder\" }}\r\n                    key={index}\r\n                  >\r\n                    <td>{order.name}</td>\r\n                    <td>{order.description}</td>\r\n                    <td>{order.category.name}</td>\r\n                    <td>{order.amount}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"UserDashBoard page\" cartProdCount={cartProducts.length}>\r\n      <div className=\"mt-5\" id=\"userdashboard-container\">\r\n        <div id=\"userDetails\" style={{ margin: \"0 auto\" }}>\r\n          {userLeftSide()}\r\n        </div>\r\n        <div id=\"orderDetails\">{userRightSide()}</div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UserDashBoard;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\Signin.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\NotFound404Page.js",["161"],"import React from \"react\";\r\nimport Base from \"../core/Base\";\r\n\r\nconst NotFound404Page = () => {\r\n  return (\r\n    <div>\r\n      <Base className=\"p-0\">\r\n      <div style={{ backgroundSize: \"cover\", padding: \"0\" }}>\r\n          <img\r\n            src={\r\n              \"https://wallpapercave.com/wp/wp2414726.jpg\"\r\n            }\r\n            alt=\"photo\"\r\n            style={{width: \"100%\", height: \"70%\", margin: \"0\"}}\r\n          />\r\n        </div>\r\n      </Base>\r\n        \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound404Page;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\Signup.js",["162"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { signup, signinWithGoogle, authenticate, isAutheticated } from \"../auth/helper\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    didRedirect: false,\r\n  });\r\n\r\n  const { name, email, password, error, success,didRedirect } = values;\r\n  const { user } = isAutheticated();\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (didRedirect) {\r\n      if (user && user.role === 1) {\r\n        return <Redirect to=\"/admin/dashboard\" />;\r\n      } else {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n    }\r\n    if (isAutheticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    const data = signup({ name, email, password })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, success: false });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            success: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"Error in signup\", err));\r\n  };\r\n\r\n  const googleOnSubmit = (responce) => {\r\n    signinWithGoogle(responce).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, loading: false });\r\n      } else {\r\n        authenticate(data, () => {\r\n          setValues({\r\n            ...values,\r\n            didRedirect: true,\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n  }, []);\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <div className=\"box\">\r\n        <form>\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={handleChange(\"name\")}\r\n              value={name}\r\n            />\r\n            <div className=\"underline\"></div>\r\n            <label>Enter Your Name</label>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={handleChange(\"email\")}\r\n              value={email}\r\n            />\r\n            <div className=\"underline\"></div>\r\n            <label>Enter Your Email</label>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              onChange={handleChange(\"password\")}\r\n              value={password}\r\n            />\r\n            <div className=\"underline\"></div>\r\n            <label>Enter a strong Password</label>\r\n          </div>\r\n          <button className=\"submitbutton\" onClick={onSubmit}>Signup</button>\r\n        </form>\r\n        <div>\r\n          <GoogleLogin\r\n            id=\"google-signin-btn\"\r\n            theme=\"dark\"\r\n            clientId={process.env.REACT_APP_GOOGLE_CLIENTID}\r\n            buttonText=\"Signup ith Google\"\r\n            onSuccess={googleOnSubmit}\r\n            onFailure={googleOnSubmit}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-success\"\r\n            style={{ display: success ? \"\" : \"none\" }}\r\n          >\r\n            New account was created successfully. Please{\" \"}\r\n            <Link to=\"/signin\">Login Here</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Sign up page\" description=\"A page for user to sign up!\" cartProdCount={cartProducts.length}>\r\n      {errorMessage()}\r\n      {successMessage()}\r\n      {signUpForm()}\r\n      {performRedirect()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageCategories.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\AddProduct.js",["163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllCategories, createProduct } from \"./helper/adminapicall\";\r\nimport { isAutheticated } from \"../auth/helper/index\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\n\r\nconst AddProduct = () => {\r\n  const { user, token } = isAutheticated();\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  const preload = () => {\r\n    getAllCategories().then((data) => {\r\n      //console.log(data);\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({ ...values, categories: data, formData: new FormData() });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createProduct(user._id, token, formData).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          price: \"\",\r\n          photo: \"\",\r\n          stock: \"\",\r\n          loading: false,\r\n          createdProduct: data.name,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n    preload();\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} created successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      cartProdCount={cartProducts.length}\r\n      title=\"Add a product here!\"\r\n      description=\"Welcome to product creation section\"\r\n      className=\"container bg-info p-4 mt-5\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateProduct.js",["168","169","170","171"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  getAllCategories,\r\n  getProduct,\r\n  updateProduct\r\n} from \"./helper/adminapicall\";\r\nimport { isAutheticated } from \"../auth/helper/index\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\n\r\n\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  const { user, token } = isAutheticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\"\r\n  });\r\n\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData\r\n  } = values;\r\n\r\n  const preload = productId => {\r\n    getProduct(productId).then(data => {\r\n      //console.log(data);\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        preloadCategories();\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (getaRedirect) {\r\n      return <Redirect to=\"/admin/products\" />;\r\n    }\r\n  };\r\n\r\n  const preloadCategories = () => {\r\n    getAllCategories().then(data => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          categories: data,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n\r\n    updateProduct(match.params.productId, user._id, token, formData).then(\r\n      data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            photo: \"\",\r\n            stock: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n            getaRedirect: true\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} updated successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n    cartProdCount={cartProducts.length}\r\n      title=\"Add a product here!\"\r\n      description=\"Welcome to product creation section\"\r\n      className=\"container bg-info p-4 mt-5\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {createProductForm()}\r\n          {performRedirect()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateCategory.js",["172","173","174","175"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getACategory, updateCategory } from \"./helper/adminapicall\";\r\nimport { isAutheticated } from \"../auth/helper/index\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\n\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n  const { user, token } = isAutheticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    getaRedirect: false,\r\n    createdCategory: \"\",\r\n  });\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const { name, loading, error, getaRedirect, createdCategory } = values;\r\n\r\n  const preload = (categoryId) => {\r\n    getACategory(categoryId, user._id, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n    preload(match.params.categoryId);\r\n  }, []);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    updateCategory(match.params.categoryId, user._id, token, { name }).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            loading: false,\r\n            createdCategory: data.name,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.value;\r\n    setValues({ ...values, name });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdCategory ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdCategory} updated successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const createCategoryForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <input\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Update Category\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n    cartProdCount={cartProducts.length}\r\n      title=\"Add a product here!\"\r\n      description=\"Welcome to product creation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <Link to=\"/admin/categories\" className=\"btn btn-md btn-dark ml-4 mb-3\">\r\n        Manage Category\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {createCategoryForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\ManageOrders.js",["176"],"import React, { useState, useEffect } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserEdit, faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Base from \"./../core/Base\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\nimport \"./manageOrder.css\";\r\nimport { getAllOrders } from \"./helper/adminapicall\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ManageOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const { user, token } = isAutheticated();\r\n\r\n  const loadData = () => {\r\n    getAllOrders(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setOrders(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n    loadData();\r\n  }, []);\r\n\r\n  return (\r\n    <Base\r\n      title=\"Manage Categories\"\r\n      description=\"Manage categories\"\r\n      cartProdCount={cartProducts.length}\r\n    >\r\n      <h2\r\n        className=\"heading\"\r\n        style={{ color: \"#2be877\", marginTop: \"30px\" }}\r\n      >\r\n        --------: Manage All Orders Here :--------\r\n      </h2>\r\n      <Link\r\n        className=\"btn btn-info\"\r\n        style={{ marginBottom: \"15px\" }}\r\n        to={`/admin/dashboard`}\r\n      >\r\n        <span className=\"\">\r\n          Admin Home\r\n          <FontAwesomeIcon\r\n            style={{ fontSize: \"25px\", color: \"#fbbc20\" }}\r\n            icon={faHouseUser}\r\n          />\r\n        </span>\r\n      </Link>\r\n      <table className=\"table table-warning\">\r\n        <thead>\r\n          <tr style={{ fontSize: \"23px\", color: \"green\" }}>\r\n            <th scope=\"col\">Product Details</th>\r\n            <th scope=\"col\">Customer Name</th>\r\n            <th scope=\"col\">Total Amount ($)</th>\r\n            <th scope=\"col\">Order Status</th>\r\n            <th scope=\"col\">Last Update</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders\r\n            .slice()\r\n            .reverse()\r\n            .map((order, index) => {\r\n              return (\r\n                <tr\r\n                  className=\"text-black bg-info\"\r\n                  style={{ fontWeight: \"bolder\" }}\r\n                  key={index}\r\n                >\r\n                  <td>\r\n                    {order.products.map((product, index) => {\r\n                      return (\r\n                        <ul className=\"list-group mt-2\" key={index}>\r\n                          {order.products.length > 1 && (\r\n                            <h3\r\n                              style={{ color: \"#b90234\", fontWeight: \"bolder\" }}\r\n                            >\r\n                              Product {index + 1}\r\n                            </h3>\r\n                          )}\r\n                          <li className=\"list-group-item\">\r\n                            <span\r\n                              className=\"badge badge-success mr-2\"\r\n                              style={{ fontSize: \"19px\" }}\r\n                            >\r\n                              Product Name:\r\n                            </span>{\" \"}\r\n                            {product.name}\r\n                          </li>\r\n                          <li className=\"list-group-item\">\r\n                            <span\r\n                              className=\"badge badge-success mr-2\"\r\n                              style={{ fontSize: \"19px\" }}\r\n                            >\r\n                              Product Count:\r\n                            </span>{\" \"}\r\n                            {product.count}\r\n                          </li>\r\n                          <li className=\"list-group-item\">\r\n                            <span\r\n                              className=\"badge badge-success mr-2\"\r\n                              style={{ fontSize: \"19px\" }}\r\n                            >\r\n                              Product Amount:\r\n                            </span>{\" \"}\r\n                            {product.price}\r\n                          </li>\r\n                        </ul>\r\n                      );\r\n                    })}\r\n                  </td>\r\n                  <td style={{ fontSize: \"26px\" }}>{order.user.name}</td>\r\n                  <td style={{ fontSize: \"26px\" }}>{order.amount}</td>\r\n                  <td style={{ fontSize: \"26px\" }}>\r\n                    {order.status}\r\n                    <Link\r\n                      style={{ color: \"#7bf985\", marginLeft: \"10px\" }}\r\n                      to={`/admin/order/update/${order._id}`}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        style={{ fontSize: \"20px\" }}\r\n                        icon={faUserEdit}\r\n                      />\r\n                    </Link>\r\n                  </td>\r\n                  <td style={{ fontSize: \"26px\" }}>{order.updated}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\UpdateOrder.js",["177","178","179","180","181","182"],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\AdminDashBoard.js",["183"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { isAutheticated } from \"../auth/helper/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCart } from \"../core/helper/cartHelper\";\r\nimport \"./admindashboard.css\";\r\n\r\nconst AdminDashBoard = () => {\r\n  const {\r\n    user: { name, email, role },\r\n  } = isAutheticated();\r\n\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n\r\n  const adminLeftSide = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\" style={{ fontSize: \"25px\" }}>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\r\n              Create Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\r\n              Manage Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\r\n              Create Product\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\r\n              Manage Products\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\r\n              Manage Orders\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const adminRightSide = () => {\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <h4 className=\"card-header\">Admin Information</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              className=\"badge badge-success mr-2\"\r\n              style={{ fontSize: \"22px\" }}\r\n            >\r\n              Name:\r\n            </span>{\" \"}\r\n            {name.toUpperCase()}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              className=\"badge badge-success mr-2\"\r\n              style={{ fontSize: \"22px\" }}\r\n            >\r\n              Email:\r\n            </span>{\" \"}\r\n            {email}\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge badge-danger\">Admin Area</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n  }, []);\r\n\r\n  return (\r\n    <Base\r\n      cartProdCount={cartProducts.length}\r\n      title=\"Welcome to admin area\"\r\n      description=\"Manage all of your products here\"\r\n      className=\"container bg-success p-4 mt-5\"\r\n    >\r\n      <div id=\"admin-container\">\r\n        <div id=\"adminright\">{adminRightSide()}</div>\r\n        <div id=\"adminleft\" style={{textAlign: \"center\", margin: \"0 auto\"}}>{adminLeftSide()}</div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AdminDashBoard;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Base.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\backend.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Card.js",["184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport ImageHelper from \"./helper/ImageHelper\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  successNotification,\r\n  loadCart,\r\n  isExistInCart,\r\n  increaseCartProdCount,\r\n  decreaseCartProdCount,\r\n  countcartprod,\r\n} from \"./helper/cartHelper\";\r\nimport \"./card.css\";\r\n\r\nconst Card = ({\r\n  product,\r\n  addtoCart = true,\r\n  removeFromCart = false,\r\n  setReload = (f) => f,\r\n  //   function(f){return f}\r\n  reload = undefined,\r\n  setReloadCartItems = (f) => f,\r\n  //   function(f){return f}\r\n  reloadCartItems = undefined,\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [prodCount, setProdCount] = useState(\r\n    countcartprod(product, removeFromCart)\r\n  );\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n  const cartTitle = product ? product.name : \"A photo from pexels\";\r\n  const cartDescrption = product ? product.description : \"Default description\";\r\n  const cartPrice = product ? product.price : \"DEFAULT\";\r\n\r\n  const errorNotification = () => {};\r\n\r\n  const addToCart = () => {\r\n    if (addItemToCart(product)) {\r\n      addItemToCart(product);\r\n      // alert(`${product.name} successfully added to the cart`);\r\n      setReloadCartItems(!reloadCartItems);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCartProducts(loadCart());\r\n  }, [reloadCartItems]);\r\n\r\n  const getARedirect = (redirect) => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCart = (addtoCart) => {\r\n    if (addToCart && !removeFromCart) {\r\n      if (isExistInCart(product)) {\r\n        return (\r\n          <Link to=\"/cart\">\r\n            <button className=\"btn btn-block btn-outline-warning mt-2 mb-2\">\r\n              Go to Cart\r\n            </button>\r\n          </Link>\r\n        );\r\n      } else {\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addToCart();\r\n              setReloadCartItems(!reloadCartItems);\r\n            }}\r\n            className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const increaseProdCount = () => {\r\n    increaseCartProdCount(product, countcartprod(product, removeFromCart));\r\n    setProdCount(countcartprod(product, removeFromCart));\r\n    setReload(!reload);\r\n  };\r\n\r\n  const increaseBtn = (removeFromCart) => {\r\n    return (\r\n      removeFromCart && (\r\n        <button\r\n          onClick={increaseProdCount}\r\n          className=\"btn increase-decrease-btns bg-success\"\r\n        >\r\n          +\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const decreaseProdCount = () => {\r\n    if (prodCount > 1) {\r\n      decreaseCartProdCount(product, countcartprod(product, removeFromCart));\r\n      setProdCount(countcartprod(product, removeFromCart));\r\n      setReload(!reload);\r\n    }\r\n  };\r\n\r\n  const decreaseBtn = (removeFromCart) => {\r\n    return (\r\n      removeFromCart && (\r\n        <button\r\n          onClick={decreaseProdCount}\r\n          className=\"btn increase-decrease-btns bg-danger\"\r\n        >\r\n          -\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const countProd = (removeFromCart) => {\r\n    if (removeFromCart) {\r\n      return (\r\n        <span id=\"count-container\">\r\n          {countcartprod(product, removeFromCart)}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showRemoveFromCart = (removeFromCart) => {\r\n    if (removeFromCart) {\r\n      return (\r\n        <button\r\n          onClick={() => {\r\n            removeItemFromCart(product._id);\r\n            setReload(!reload);\r\n          }}\r\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove from Cart\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"card text-white bg-dark border border-info mb-2 \"\r\n      id=\"card-container\"\r\n    >\r\n      <div className=\"card-header lead\">{cartTitle}</div>\r\n      <div className=\"card-body\">\r\n        {getARedirect(redirect)}\r\n        <ImageHelper product={product} />\r\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\r\n          {cartDescrption}\r\n        </p>\r\n        <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cartPrice}</p>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">{showAddToCart(addtoCart)}</div>\r\n          <div className=\"count-container\">\r\n            {decreaseBtn(removeFromCart)}\r\n            {countProd(removeFromCart)}\r\n            {increaseBtn(removeFromCart)}\r\n          </div>\r\n          <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\Carousel.js",["188"],"import React, { useState, useEffect } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { getAllProducts, deleteProduct } from \"../admin/helper/adminapicall\";\r\nimport { API } from \"../backend\";\r\n\r\nconst ShowCarousel = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const size = 5;\r\n  const preload = () => {\r\n    getAllProducts().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setProducts(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n  const startingIndex = Math.floor(Math.random() * products.length);\r\n  const endingIndex = startingIndex + size;\r\n  return (\r\n    <Carousel\r\n      pause={false}\r\n      fade={true}\r\n      controls={false}\r\n      style={{\r\n        height: \"600px\",\r\n        overflow: \"hidden\",\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n      }}\r\n    >\r\n      {products.slice(startingIndex, endingIndex).map((product, index) => {\r\n        return (\r\n          <Carousel.Item key={index} interval={4000} style={{ width: \"100%\" }}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              style={{ height: \"550px\" }}\r\n              src={`${API}/product/photo/${product._id}`}\r\n              alt=\"First slide\"\r\n            />\r\n          </Carousel.Item>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ShowCarousel;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\StripeCheckout.js",["189","190","191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { cartEmpty, loadCart, countcartprod } from \"./helper/cartHelper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\nimport { API } from \"../backend\";\r\nimport { createOrder } from \"./helper/orderHelper\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDollarSign, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./stripeCheckout.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst StripeCheckout = ({\r\n  products,\r\n  setReload = (f) => f,\r\n  reload = undefined,\r\n}) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const token = isAutheticated() && isAutheticated().token;\r\n  const userId = isAutheticated() && isAutheticated().user._id;\r\n\r\n  const getFinalAmount = () => {\r\n    let amount = 0;\r\n    if (products.length > 0) {\r\n      products.map((p) => {\r\n        amount = amount + p.price;\r\n        amount = amount * countcartprod(p, true);\r\n      });\r\n      if (amount < 7) {\r\n        amount += 1;\r\n      }\r\n      return amount;\r\n    }\r\n  };\r\n\r\n  const makePayment = (token) => {\r\n    products.map((product) => {\r\n      product.count = countcartprod(product, true);\r\n    })\r\n    const body = {\r\n      token,\r\n      products,\r\n    };\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    return fetch(`${API}/payment/stripe`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => {\r\n        var todayDate = new Date();\r\n\r\n        const orderData = {\r\n          products: products,\r\n          amount: getFinalAmount(),\r\n          updated: todayDate.toDateString(),\r\n        };\r\n        createOrder(\r\n          isAutheticated().user._id,\r\n          isAutheticated().token,\r\n          orderData\r\n        );\r\n        //call further methods\r\n        swal({\r\n          title: \"Order Successfully Recieved\",\r\n          text: \"Thanks for Ordering\",\r\n          icon: \"success\",\r\n          button: \"Thank You\",\r\n        });\r\n\r\n        cartEmpty(() => {\r\n          console.log(\"\");\r\n        });\r\n        setReload(!reload);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const showStripeButton = () => {\r\n    return isAutheticated() ? (\r\n      <StripeCheckoutButton\r\n        stripeKey={process.env.REACT_APP_PUBLISHABLEKEY}\r\n        token={makePayment}\r\n        amount={getFinalAmount() * 100}\r\n        name=\"Buy Products\"\r\n        shippingAddress\r\n        billingAddress\r\n      >\r\n        <button className=\"btn btn-success\" style={{ width: \"130px\" }}>\r\n          Buy Now\r\n        </button>\r\n      </StripeCheckoutButton>\r\n    ) : (\r\n      <Link to=\"/signin\">\r\n        <button className=\"btn btn-warning\">Signin</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ alignItems: \"center\", marginLeft: \"20%\", marginTop: \"20px\" }}>\r\n      <div id=\"payment-details-container\">\r\n        <h2\r\n          style={{\r\n            color: \"#6b6b6b\",\r\n            width: \"70%\",\r\n            textAlign: \"initial\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          Price Details\r\n        </h2>\r\n        <div className=\"dotted-line\" style={{ marginBottom: \"20px\" }}></div>\r\n        <div className=\"eachDetails\">\r\n          <h4>\r\n            {`Price(${products.length}`}\r\n            {products.length < 2 ? \" item)\" : \" items)\"}\r\n          </h4>\r\n          <h4>\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: \"22px\", color: \"black\", marginRight: \"3px\" }}\r\n              icon={faDollarSign}\r\n            />\r\n            {getFinalAmount() <= 7 ? getFinalAmount() - 1 : getFinalAmount()}\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"eachDetails\">\r\n          <h4>Delivery Charges</h4>\r\n          <h4 c>\r\n            {getFinalAmount() < 7 ? (\r\n              <FontAwesomeIcon\r\n                style={{ fontSize: \"22px\", color: \"black\", marginRight: \"3px\" }}\r\n                icon={faDollarSign}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {getFinalAmount() <= 7 ? \"1\" : \"Free\"}\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"dotted-line\"></div>\r\n\r\n        <div className=\"eachDetails text-success\">\r\n          <h3>Total Billing Amount</h3>\r\n          <h3>\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: \"25px\", color: \"gold\", marginRight: \"3px\" }}\r\n              icon={faDollarSign}\r\n            />\r\n            {getFinalAmount()}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"total-amount-container\">\r\n        <h5 className=\"text-white\">\r\n          <FontAwesomeIcon\r\n            style={{ fontSize: \"25px\", color: \"white\", marginRight: \"3px\" }}\r\n            icon={faUserShield}\r\n          />\r\n          Pay Securely\r\n        </h5>\r\n        {products.length >= 1 && showStripeButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\auth\\helper\\index.js",["197"],"import { API } from \"../../backend\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const signup = (user) => {\r\n  return fetch(`${API}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      // console.log(response.json());\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const signin = (user) => {\r\n  return fetch(`${API}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const signinWithGoogle = (responce) => {\r\n  return fetch(`${API}/googlesignin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tokenId: responce.tokenId }),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      return data;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const signout = (next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n    next();\r\n\r\n    return fetch(`${API}/signout`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => console.log(\"\"))\r\n      .catch((err) => console.log(err));\r\n  }\r\n};\r\n\r\nexport const isAutheticated = () => {\r\n  if (typeof window == \"undefined\") {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\cartHelper.js",["198","199"],"import ReactNotification from \"react-notifications-component\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\nexport const successNotification = () => {\r\n  store.addNotification({\r\n    title: \"product added to cart\",\r\n    message: \"Successfully added\",\r\n    type: \"success\",\r\n    container: \"top-right\",\r\n    insert: \"top\",\r\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onScreen: true,\r\n    },\r\n  });\r\n};\r\n\r\nexport const addItemToCart = (item) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    const isExist = cart.find((x) => x._id === item._id);\r\n    if (!isExist) {\r\n      cart.push({\r\n        ...item,\r\n        count: 1,\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport const increaseCartProdCount = (item, count) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      const prodIndex = cart.findIndex((cartProd) => {\r\n        return cartProd._id === item._id;\r\n      });\r\n      cart[prodIndex].count = count + 1;\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }\r\n  }\r\n};\r\n\r\nexport const decreaseCartProdCount = (item, count) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      const prodIndex = cart.findIndex((cartProd) => {\r\n        return cartProd._id === item._id;\r\n      });\r\n      cart[prodIndex].count = count - 1;\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }\r\n  }\r\n};\r\n\r\nexport const countcartprod = (item, condition) => {\r\n  if (condition) {\r\n    let cart = [];\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      if (cart.length === 0) {\r\n        return;\r\n      }\r\n      const prodIndex = cart.findIndex((cartProd) => {\r\n        return cartProd._id === item._id;\r\n      });\r\n      if(prodIndex === -1){\r\n        return;\r\n      } \r\n      if (cart[prodIndex].count) {\r\n        return cart[prodIndex].count;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const isExistInCart = (item) => {\r\n  const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n  const isExist = cart.find((x) => x._id === item._id);\r\n  if (isExist) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const loadCart = () => {\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      return JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const setCart = () => {\r\n  if (!localStorage.getItem(\"cart\")) {\r\n    let cart = [];\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n};\r\n\r\nexport const removeItemFromCart = (productId) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.map((product, i) => {\r\n      if (product._id === productId) {\r\n        cart.splice(i, 1);\r\n      }\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n  return cart;\r\n};\r\n\r\nexport const cartEmpty = (next) => {\r\n  if (typeof window !== undefined) {\r\n    localStorage.removeItem(\"cart\");\r\n    let cart = [];\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\user\\helper\\userapicalls.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\NavMenu.js",["200"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { isAutheticated, signout } from \"./../auth/helper/index\";\r\nimport \"./navmenu.css\";\r\n\r\nconst currentTab = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return { color: \"#2ecc72\" };\r\n  } else {\r\n    return { color: \"#FFFFFF\" };\r\n  }\r\n};\r\n\r\nconst NavMenu = ({ history, cartProdCount }) => {\r\n  // console.log(cartProdCount);\r\n  return (\r\n    <div style={{ borderBottom: \"1px solid white\" }}>\r\n      <ul className=\"bg-dark nav-container\" style={{ fontSize: \"21px\" }}>\r\n        <li className=\"\" style={{ fontWeight: \"bolder\" }}>\r\n          <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        {isAutheticated() && (\r\n          <li className=\"\" style={{ fontWeight: \"bolder\" }}>\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/user/dashboard\"\r\n              style={currentTab(history, \"/user/dashboard\")}\r\n            >\r\n              User Dashboard\r\n            </Link>\r\n          </li>\r\n        )}\r\n\r\n        {isAutheticated() && isAutheticated().user.role === 1 && (\r\n          <li className=\"\" style={{ fontWeight: \"bolder\" }}>\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/admin/dashboard\"\r\n              style={currentTab(history, \"/admin/dashboard\")}\r\n            >\r\n              Admin Dashboard\r\n            </Link>\r\n          </li>\r\n        )}\r\n\r\n        <li\r\n          className=\"\"\r\n          style={{ fontWeight: \"bolder\", marginTop: \"-4px\" }}\r\n        >\r\n          <Link\r\n            style={currentTab(history, \"/cart\")}\r\n            className=\"nav-link\"\r\n            to=\"/cart\"\r\n          >\r\n            Cart\r\n            {cartProdCount > 0 && (\r\n              <h3\r\n                style={{\r\n                  color: \"white\",\r\n                  fontWeight: \"bolder\",\r\n                  border: \"2px solid navy\",\r\n                  borderRadius: \"50%\",\r\n                  height: \"35px\",\r\n                  width: \"35px\",\r\n\r\n                  display: \"inline-block\",\r\n                  margin: \"0px\",\r\n\r\n                  backgroundColor: \"navy\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {cartProdCount}\r\n              </h3>\r\n            )}\r\n          </Link>\r\n        </li>\r\n\r\n        {!isAutheticated() && (\r\n          <Fragment>\r\n            <li className=\"\" style={{ fontWeight: \"bolder\" }}>\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/signin\"\r\n                style={currentTab(history, \"/signin\")}\r\n              >\r\n                Signin\r\n              </Link>\r\n            </li>\r\n            <li className=\"\" style={{ fontWeight: \"bolder\" }}>\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/signup\"\r\n                style={currentTab(history, \"/signup\")}\r\n              >\r\n                Signup\r\n              </Link>\r\n            </li>\r\n          </Fragment>\r\n        )}\r\n\r\n        {isAutheticated() && (\r\n          <li\r\n            className=\"\"\r\n            style={{\r\n              fontWeight: \"bolder\",\r\n              cursor: \"pointer\",\r\n              marginRight: \"0px\",\r\n            }}\r\n          >\r\n            <span\r\n              className=\"nav-link text-warning\"\r\n              onClick={() => {\r\n                signout(() => {\r\n                  history.push(\"/\");\r\n                });\r\n              }}\r\n            >\r\n              Signout\r\n            </span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavMenu);\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\ImageHelper.js",["201"],"import React from \"react\";\r\nimport { API } from \"../../backend\";\r\n\r\nconst ImageHelper = ({ product }) => {\r\n  const imageurl = product\r\n    ? `${API}/product/photo/${product._id}`\r\n    : `https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`;\r\n  return (\r\n    <div\r\n      className=\"rounded border border-success p-2 mb-2\"\r\n      style={{\r\n        height: \"300px\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      <img\r\n        src={imageurl}\r\n        alt=\"photo\"\r\n        className=\"mb-3 rounded\"\r\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageHelper;\r\n","C:\\Users\\Sourav\\Desktop\\Ecommerce-Website\\projfrontend\\src\\core\\helper\\orderHelper.js",[],["202","203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"212","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":46,"column":21,"nodeType":"215","messageId":"216","endLine":46,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":47,"column":25,"nodeType":"219","messageId":"220","endLine":47,"endColumn":27},{"ruleId":"208","severity":1,"message":"221","line":5,"column":31,"nodeType":"210","messageId":"211","endLine":5,"endColumn":44},{"ruleId":"208","severity":1,"message":"222","line":13,"column":10,"nodeType":"210","messageId":"211","endLine":13,"endColumn":22},{"ruleId":"208","severity":1,"message":"223","line":52,"column":9,"nodeType":"210","messageId":"211","endLine":52,"endColumn":21},{"ruleId":"208","severity":1,"message":"224","line":15,"column":26,"nodeType":"210","messageId":"211","endLine":15,"endColumn":30},{"ruleId":"225","severity":1,"message":"226","line":70,"column":15,"nodeType":"227","messageId":"220","endLine":70,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":160,"column":6,"nodeType":"230","endLine":160,"endColumn":8,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":9,"column":11,"nodeType":"234","endLine":15,"endColumn":13},{"ruleId":"208","severity":1,"message":"235","line":44,"column":11,"nodeType":"210","messageId":"211","endLine":44,"endColumn":15},{"ruleId":"208","severity":1,"message":"236","line":33,"column":5,"nodeType":"210","messageId":"211","endLine":33,"endColumn":13},{"ruleId":"208","severity":1,"message":"237","line":34,"column":5,"nodeType":"210","messageId":"211","endLine":34,"endColumn":12},{"ruleId":"208","severity":1,"message":"212","line":35,"column":5,"nodeType":"210","messageId":"211","endLine":35,"endColumn":10},{"ruleId":"208","severity":1,"message":"238","line":37,"column":5,"nodeType":"210","messageId":"211","endLine":37,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":76,"column":6,"nodeType":"230","endLine":76,"endColumn":8,"suggestions":"239"},{"ruleId":"208","severity":1,"message":"236","line":40,"column":5,"nodeType":"210","messageId":"211","endLine":40,"endColumn":13},{"ruleId":"208","severity":1,"message":"237","line":41,"column":5,"nodeType":"210","messageId":"211","endLine":41,"endColumn":12},{"ruleId":"208","severity":1,"message":"212","line":42,"column":5,"nodeType":"210","messageId":"211","endLine":42,"endColumn":10},{"ruleId":"228","severity":1,"message":"240","line":90,"column":6,"nodeType":"230","endLine":90,"endColumn":8,"suggestions":"241"},{"ruleId":"208","severity":1,"message":"237","line":21,"column":17,"nodeType":"210","messageId":"211","endLine":21,"endColumn":24},{"ruleId":"208","severity":1,"message":"212","line":21,"column":26,"nodeType":"210","messageId":"211","endLine":21,"endColumn":31},{"ruleId":"208","severity":1,"message":"238","line":21,"column":33,"nodeType":"210","messageId":"211","endLine":21,"endColumn":45},{"ruleId":"228","severity":1,"message":"242","line":39,"column":6,"nodeType":"230","endLine":39,"endColumn":8,"suggestions":"243"},{"ruleId":"228","severity":1,"message":"244","line":30,"column":6,"nodeType":"230","endLine":30,"endColumn":8,"suggestions":"245"},{"ruleId":"208","severity":1,"message":"246","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":19},{"ruleId":"208","severity":1,"message":"247","line":25,"column":10,"nodeType":"210","messageId":"211","endLine":25,"endColumn":20},{"ruleId":"208","severity":1,"message":"248","line":25,"column":22,"nodeType":"210","messageId":"211","endLine":25,"endColumn":35},{"ruleId":"208","severity":1,"message":"237","line":27,"column":19,"nodeType":"210","messageId":"211","endLine":27,"endColumn":26},{"ruleId":"208","severity":1,"message":"212","line":27,"column":28,"nodeType":"210","messageId":"211","endLine":27,"endColumn":33},{"ruleId":"228","severity":1,"message":"249","line":45,"column":6,"nodeType":"230","endLine":45,"endColumn":8,"suggestions":"250"},{"ruleId":"208","severity":1,"message":"224","line":10,"column":26,"nodeType":"210","messageId":"211","endLine":10,"endColumn":30},{"ruleId":"208","severity":1,"message":"251","line":7,"column":3,"nodeType":"210","messageId":"211","endLine":7,"endColumn":22},{"ruleId":"208","severity":1,"message":"252","line":27,"column":20,"nodeType":"210","messageId":"211","endLine":27,"endColumn":31},{"ruleId":"208","severity":1,"message":"222","line":31,"column":10,"nodeType":"210","messageId":"211","endLine":31,"endColumn":22},{"ruleId":"208","severity":1,"message":"253","line":36,"column":9,"nodeType":"210","messageId":"211","endLine":36,"endColumn":26},{"ruleId":"208","severity":1,"message":"254","line":3,"column":26,"nodeType":"210","messageId":"211","endLine":3,"endColumn":39},{"ruleId":"208","severity":1,"message":"255","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"256","line":3,"column":21,"nodeType":"210","messageId":"211","endLine":3,"endColumn":29},{"ruleId":"208","severity":1,"message":"235","line":18,"column":10,"nodeType":"210","messageId":"211","endLine":18,"endColumn":14},{"ruleId":"208","severity":1,"message":"257","line":18,"column":16,"nodeType":"210","messageId":"211","endLine":18,"endColumn":23},{"ruleId":"208","severity":1,"message":"258","line":25,"column":9,"nodeType":"210","messageId":"211","endLine":25,"endColumn":14},{"ruleId":"208","severity":1,"message":"259","line":26,"column":9,"nodeType":"210","messageId":"211","endLine":26,"endColumn":15},{"ruleId":"213","severity":1,"message":"260","line":31,"column":24,"nodeType":"215","messageId":"261","endLine":31,"endColumn":26},{"ruleId":"213","severity":1,"message":"260","line":43,"column":28,"nodeType":"215","messageId":"261","endLine":43,"endColumn":30},{"ruleId":"208","severity":1,"message":"262","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":18},{"ruleId":"208","severity":1,"message":"263","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"260","line":123,"column":27,"nodeType":"215","messageId":"261","endLine":123,"endColumn":29},{"ruleId":"208","severity":1,"message":"264","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":35},{"ruleId":"232","severity":1,"message":"233","line":18,"column":7,"nodeType":"234","endLine":23,"endColumn":9},{"ruleId":"204","replacedBy":"265"},{"ruleId":"206","replacedBy":"266"},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'countcartprod' is defined but never used.","'cartProducts' is assigned a value but never used.","'loadCheckout' is assigned a value but never used.","'role' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["269"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'data' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.",["270"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["273"],"'getAllStatusCode' is defined but never used.","'statusCode' is assigned a value but never used.","'setStatusCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.orderId' and 'preload'. Either include them or remove the dependency array.",["274"],"'successNotification' is defined but never used.","'setRedirect' is assigned a value but never used.","'errorNotification' is assigned a value but never used.","'deleteProduct' is defined but never used.","'useEffect' is defined but never used.","'loadCart' is defined but never used.","'setData' is assigned a value but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Redirect' is defined but never used.","'ReactNotification' is defined but never used.","'useState' is defined but never used.",["267"],["268"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"275","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [preload]",{"range":"286","text":"287"},{"range":"288","text":"287"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"289","text":"290"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"291","text":"292"},"Update the dependencies array to be: [loadData]",{"range":"293","text":"294"},"Update the dependencies array to be: [match.params.orderId, preload]",{"range":"295","text":"296"},[4641,4643],"[preload]",[1836,1838],[2008,2010],"[match.params.productId, preload]",[1097,1099],"[match.params.categoryId, preload]",[932,934],"[loadData]",[1174,1176],"[match.params.orderId, preload]"]